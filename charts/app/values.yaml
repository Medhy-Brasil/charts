# Default values for testapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image:
  repository: nginx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

containerPort: 80

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "app"

suspend: false

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# podAnnotations: {}

podDisruptionBudget:
  enabled: false
  minAvailable: 1

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # allowPrivilegeEscalation: false

service:
  annotations: {}
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart.example.local
      paths: 
        - path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1
  #   memory: 1Gi
  # requests:
  #   cpu: 50m
  #   memory: 64Mi

probes:
  enabled: false
  livenessProbe:
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 20
  readinessProbe:
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 20

autoscaling:
  enabled: false
  minReplicas: 0
  maxReplicas: 6
  # Trigger list: https://keda.sh/docs/2.6/scalers/
  triggers: []
  # - type: cpu
  #   metadata:
  #   type: Utilization
  #   # Value is in percent
  #   value: "60"
  # - type: rabbitmq
  #   metadata:
  #     value: '20'
  #     mode: QueueLength 
  #     queueName: testqueue
  #     hostFromEnv: RABBITMQ_HOST

env:
  PLATFORM: kubernetes

nodeSelector: {}

tolerations: []

interNodeAntiAffinityEnabled: true

serviceMonitor:
  enabled: false
  namespace: monitoring
  containerMetricsPort: 8080

extraVolumeMounts:
  enabled: false
  volumeMounts: []
    # - name: config
    #   mountPath: /etc/nginx

extraConfigMap:
  enabled: false
  configMap: {}

extraVolumes:
  enabled: false
  volumes: []
    # - name: config
    #   configMap:
    #     name: config
    #     items:
    #       - key: nginx.conf
    #         path: nginx.conf


postUpgradeJob:
  enabled: false
  image: alpine:3.3
  command: ["echo", "hello"]
  env: {}

# Override docker image entrypoint
command: []
